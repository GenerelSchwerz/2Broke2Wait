# Publish GitHub workflow artifacts tutorial example
name: Development build tasks

on:
  push:
    branches: [ dev ]

jobs:
       
  build_dev_x64:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            build: npx pkg . --target node16-win-x64
            artifact: "2bored2wait-win-x64-${{github.sha}}.exe"
          - os: macos-latest
            build: npx pkg . --target node16-macos-x64
            artifact: "2bored2wait-macos-x64-${{github.sha}}"
          - os: ubuntu-latest
            build: npx pkg . --target node16-linux-x64
            artifact: "2bored2wait-linux-x64-${{github.sha}}"

    runs-on: ${{ matrix.os }} 
    name: Build x64 development version
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Dependencies
        run: npm i

      - name: Dedup
        run: npm dedup --production

      - name: Build
        run: |
          mkdir pkg
          ${{ matrix.build }} -o "pkg/${{matrix.artifact}}"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: "pkg/${{matrix.artifact}}"


  build_dev_arm64:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            build: npx pkg . --target node16-macos-arm64
            artifact: "2bored2wait-macos-arm64-${{github.sha}}"
          - os: ubuntu-latest
            build: npx pkg . --target node16-linux-arm64
            artifact: "2bored2wait-linux-arm64-${{github.sha}}"

    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build arm64 development version
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -q -y
            apt-get install -q -y wget git build-essential
            wget -O - https://deb.nodesource.com/setup_16.x | bash -
            apt-get install -q -y nodejs

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            ls -l   
            echo $HOME
            pwd
            id
            echo $HOME
            chown -R root:root /home/runner
            echo $(node -e "const version = process.version; console.log(version)")   
            npm install
            npm dedup --production
            ${{matrix.build}} -o "/artifacts/${{matrix.artifact}}"

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: "${PWD}/artifacts/${{matrix.artifact}}"

  build_dev_armv7:
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            build: npx pkg . --target node16-linux-armv7
            artifact: "2bored2wait-linux-arm64-${{github.sha}}"

    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build armv7 development version
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
      
          install: |
            apt-get update -q -y
            apt-get install -q -y wget git build-essential
            wget -O - https://deb.nodesource.com/setup_16.x | bash -
            apt-get install -q -y nodejs

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            ls -l   
            echo $HOME
            pwd
            id
            echo $HOME
            chown -R root:root /home/runner
            echo $(node -e "const version = process.version; console.log(version)")   
            npm i
            npm dedup --production
            npx caxa -i . -o "/artifacts/${{matrix.artifact}}" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/lib/index.js" --exclude ".git" --exclude "src" --exclude "ncc"

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: "${PWD}/artifacts/${{matrix.artifact}}"