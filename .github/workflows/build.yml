# Publish GitHub workflow artifacts tutorial example
name: Build To Executable

on:
  push:
    branches: [ main ]

jobs:
       
  backend-build-x64:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            build: npx pkg . --target node16-win-x64
            artifact: "2bored2wait-win-x64-${{github.sha}}.exe"
          - os: macos-latest
            build: npx pkg . --target node16-macos-x64
            artifact: "2bored2wait-macos-x64-${{github.sha}}"
          - os: ubuntu-latest
            build: npx pkg . --target node16-linux-x64
            artifact: "2bored2wait-linux-x64-${{github.sha}}"
    runs-on: ${{ matrix.os }} 
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Dependencies
        run: npm i

      - name: Dedup
        run: npm dedup --production

      - name: Build
        run: |
          mkdir pkg
          ${{ matrix.build }} -o "pkg/${{matrix.artifact}}"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: "pkg/${{matrix.artifact}}"


  backend-build-arm64:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            build: npx pkg . --target node16-macos-arm64
            artifact: "2bored2wait-macos-arm64-${{github.sha}}"
          - os: ubuntu-latest
            build: npx pkg . --target node16-linux-arm64
            artifact: "2bored2wait-linux-arm64-${{github.sha}}"

    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 aarch64
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
      
          install: |
            apt install -y curl
            curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt install -y nodejs

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            npm i
            npm dedup --production
            ${{matrix.build}} -o "/artifacts/${{matrix.artifact}}"

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: "${PWD}/artifacts/${{matrix.artifact}}"

  backend-build-armv7:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            distro: 
            build: npx pkg . --target node16-macos-armv7
            artifact: "2bored2wait-macos-arm64-${{github.sha}}"
          - os: ubuntu-latest
            build: npx pkg . --target node16-linux-armv7
            artifact: "2bored2wait-linux-arm64-${{github.sha}}"

    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 armv7
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
      
          install: |
            apt install -y curl
            curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt install -y nodejs

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            npm i
            npm dedup --production
            ${{matrix.build}} -o "/artifacts/${{matrix.artifact}}"

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: "${PWD}/artifacts/${{matrix.artifact}}"